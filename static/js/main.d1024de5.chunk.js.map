{"version":3,"sources":["pages/DeliveryNew.js","pages/DeliveryShow.js","ethereum/web3.js","ethereum/variables.js","ethereum/notification.js","components/Header.js","components/DeliveryRow.js","pages/Home.js","App.js","registerServiceWorker.js","index.js","ethereum/factory.js"],"names":["bigInt","require","DeliveryNew","state","receiver","message","term","deposit","loading","errorMessage","onSubmit","event","a","preventDefault","setState","p","variables","substr","g","r","ya","messageSentBuffer","Buffer","from","messageSent","toString","m1","modPow","m2","multiply","web3","eth","getAccounts","accounts","factory","methods","createDelivery","send","value","alert","props","history","push","to","this","error","Field","onChange","target","label","labelPosition","header","content","color","Component","withRouter","dateFormat","DeliveryShow","address","sender","c1","c2","start","z1","z2","yb","c","w","componentDidMount","match","params","deliveryContract","notification","getBalance","call","getState","d","Date","setUTCSeconds","xb","wBig","cBig","pBig","c2Big","yaBig","subtract","mod","messageReceived","divide","inverted","active","hidden","readOnly","as","horizontal","primary","window","Web3","currentProvider","addEventListener","ethereum","enable","q","xa","Delivery","Contract","JSON","parse","interface","Menu","stackable","style","marginTop","Item","Link","position","DeliveryRow","account","plazo","ahora","delivery","d2","onView","onChallenge","contractAddress","minus","randBetween","s","challenge","onResponse","z3","z4","modInv","add","response","onAccept","accept","onFinish","finish","onCancelA","cancelA","onCancelB","cancelB","Table","Row","Cell","id","sent","Label","Button","animated","onClick","disabled","now","Content","visible","Icon","name","Message","Home","loadingPage","getSenderDeliveriesCount","senderDeliveriesCount","getReceiverDeliveriesCount","receiverDeliveriesCount","Promise","all","Array","parseInt","fill","map","index","senderDeliveries","receiverDeliveries","key","Segment","height","Dimmer","Loader","circular","fixed","Header","HeaderCell","Body","renderDeliveryRows","icon","App","Container","exact","path","component","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","render","document","getElementById","URL","process","origin","fetch","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","DeliveryFactory","instance"],"mappings":"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","file":"static/js/main.d1024de5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter, Link } from \"react-router-dom\";\nimport { Form, Button, Message, Input } from 'semantic-ui-react';\nimport factory from '../ethereum/factory';\nimport web3 from '../ethereum/web3';\nimport variables from '../ethereum/variables';\n\nconst bigInt = require(\"big-integer\");\n\nclass DeliveryNew extends Component {\n  state = {\n    receiver: '',\n    message: '',\n    term: '',\n    deposit: '',\n    loading: false,\n    errorMessage: ''\n   };\n\n  onSubmit = async event => {\n    event.preventDefault();\n\n    this.setState({ loading: true, errorMessage: '' });\n\n    try {\n        let m1, m2;\n        \n        // p, g of ElGamal algorithm\n        let p = bigInt(variables.p.substr(2), 16)\n        let g = bigInt(variables.g.substr(2), 16)\n        // Random number r\n        \n        let r = bigInt(variables.r.substr(2),16)\n\n        // ya public key of A\n        let ya = bigInt(variables.ya.substr(2), 16)\n        \n        let messageSentBuffer = Buffer.from(this.state.message, 'utf8');\n        let messageSent = bigInt(messageSentBuffer.toString('hex'), 16);\n\n        // Generation of M1 = g^r mod p\n        m1 = g.modPow(r, p);\n\n        // Generation of M2 = m·ya^r mod p\n        m2 = messageSent.multiply(ya.modPow(r, p));\n        \n        const accounts = await web3.eth.getAccounts();\n        await factory.methods\n            .createDelivery(this.state.receiver, \"0x\"+m1.toString(16), \"0x\"+m2.toString(16),\n              \"0x\"+ya.toString(16), \"0x\"+g.toString(16), \"0x\"+p.toString(16), this.state.term\n              )\n            .send({ from: accounts[0], value: this.state.deposit });\n\n          \n        alert('¡Contrato creado!');\n        // Refresh, using withRouter\n        this.props.history.push('/');\n    } catch (err) {\n        this.setState({ errorMessage: err.message });\n    } finally {\n        this.setState({ loading: false });\n    }\n\n  };\n\n  render() {\n    return (\n      <div>\n        <Link to='/'>Atrás</Link>\n        <h3>Generar contrato</h3>\n        <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n          <Form.Field>\n            <label>Receptor del contrato</label>\n            <Input\n              value={this.state.receiver}\n              onChange={event => this.setState({ receiver: event.target.value })}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Contenido del contrato</label>\n            <Input\n              value={this.state.message}\n              onChange={event => this.setState({ message: event.target.value })}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Tiempo límite para firmar el contrato </label>\n            <Input\n              label=\"segundos\"\n              labelPosition=\"right\"\n              value={this.state.term}\n              onChange={event => this.setState({ term: event.target.value })}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Deposito</label>\n            <Input\n              label=\"wei\"\n              labelPosition=\"right\"\n              value={this.state.deposit}\n              onChange={event => this.setState({ deposit: event.target.value })}\n            />\n          </Form.Field>\n\n          <Message error header=\"ERROR\" content={this.state.errorMessage} />\n          <Button   color=\"green\"      loading={this.state.loading}>\n            ¡Enviar!\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n}\n                \nexport default withRouter(DeliveryNew);\n","import React, { Component } from 'react';\nimport { withRouter, Link } from \"react-router-dom\";\nimport { Form, Button, Message, Input, Dimmer, Loader, Label } from 'semantic-ui-react';\nimport notification from '../ethereum/notification';\nimport web3 from '../ethereum/web3';\nimport variables from '../ethereum/variables';\n\nconst bigInt = require(\"big-integer\");\nconst dateFormat = require('dateformat');\n\nclass DeliveryShow extends Component {\n  state = {\n    address: '',\n    sender: '',\n    receiver: '',\n    state: '',\n    g: '',\n    p: '',\n    c1: '',\n    c2: '',\n    ya: '',\n    term: '',\n    start: '',\n    z1: '',\n    z2: '',\n    yb: '',\n    c: '',\n    w: '',\n    message: '',\n    deposit: '',\n    loading: false,\n    errorMessage: ''\n  };\n\n  componentDidMount = async () => {\n\n    this.setState({ loading: true, errorMessage: '' });\n\n    try {\n      let address = this.props.match.params.address;\n      let deliveryContract = notification(address);\n\n      let deposit = await web3.eth.getBalance(address)\n\n      let sender = await deliveryContract.methods.sender().call();\n      let receiver = await deliveryContract.methods.receiver().call();\n      let state = await deliveryContract.methods.getState(address).call();\n      let g = await deliveryContract.methods.g().call();\n      let p = await deliveryContract.methods.p().call();\n      let c1 = await deliveryContract.methods.c1().call();\n      let c2 = await deliveryContract.methods.c2().call();\n      let ya = await deliveryContract.methods.ya().call();\n      let term = await deliveryContract.methods.term().call();\n      let start = await deliveryContract.methods.start().call();\n      let z1 = await deliveryContract.methods.z1().call();\n      let z2 = await deliveryContract.methods.z2().call();\n      let yb = await deliveryContract.methods.yb().call();\n      let c = await deliveryContract.methods.c().call();\n      let w = await deliveryContract.methods.w().call();\n      let message = '';\n\n      let d = new Date(0);\n      d.setUTCSeconds(start);\n      start = dateFormat(d, \"dd/mm/yyyy HH:MM\");\n\n      // Calcular MESSAGE\n      if (w) {\n        \n        let xb = bigInt(variables.xb.substr(2), 16);\n\n        let wBig = bigInt(w.substr(2), 16);\n        let cBig = bigInt(c.substr(2), 16);\n        let pBig = bigInt(p.substr(2), 16);\n        let c2Big = bigInt(c2.substr(2), 16);\n        let yaBig = bigInt(ya.substr(2), 16);\n        \n        let r = wBig.subtract(cBig.multiply(xb.mod(pBig)));  // r = w-c*xb mod q\n\n        const messageReceived = c2Big.divide(yaBig.modPow(r, pBig));\n        message = Buffer.from(messageReceived.toString(16), 'hex');\n      }\n\n      this.setState({ \n        address: address,\n        sender: sender,\n        receiver: receiver,\n        state: state,\n        g: g,\n        p: p,\n        c1: c1,\n        c2: c2,\n        ya: ya,\n        term: term,\n        start: start,\n        z1: z1,\n        z2: z2,\n        yb: yb,\n        c: c,\n        w: w,\n        message: message,\n        deposit: deposit\n      });\n    } catch (err) {\n      this.setState({ errorMessage: err.message });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  onSubmit = async event => {\n    event.preventDefault();\n\n    // Refresh, using withRouter\n    this.props.history.push('/');\n  };\n\n  render() {\n    return (\n      <div>\n        <Dimmer inverted active={this.state.loading}>\n          <Loader inverted content='Loading...'></Loader>\n        </Dimmer>\n        <Link to='/'>Atrás</Link>\n        <h3>Vista del contrato</h3>\n        <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage} hidden={this.state.loading}>\n          <Form.Field>\n            <label>Dirección del Smart Contract</label>\n            <Input\n              readOnly\n              value={this.state.address}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Proponente</label>\n            <Input\n              readOnly\n              value={this.state.sender}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Propuesto a: </label>\n            <Input\n              readOnly\n              value={this.state.receiver}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Estado</label>\n            {\n                 this.state.state==='finished'? \n                   (\n                    <Label as='a' color='teal' horizontal>Finalizado</Label>\n                   ) : (\n                    this.state.state==='accepted'?\n                    (\n                      <Label as='a' color='yellow' horizontal>Aceptado</Label>\n                    ) : (\n                      this.state.state==='responsed'? \n                      (\n                        <Label as='a' horizontal>Respondido</Label>\n                      ) : (\n                        this.state.state==='challenged'?\n                        (\n                          <Label as='a' color='red' horizontal>Retado</Label>\n                        ) : (\n                          this.state.state==='created'?\n                          (\n                            <Label as='a' color='green' horizontal>Creado</Label>\n                          ):(\n                            <Label as='a' horizontal>-</Label>\n                          )\n                        )\n                      )\n                    )\n                   )\n            }\n          </Form.Field>\n\n          <Form.Field>\n            <label>p of ElGamal algorithm</label>\n            <Input\n              readOnly\n              value={this.state.p}\n            />\n          </Form.Field>\n            \n         \n\n          <Form.Field>\n            <label>g of ElGamal algorithm</label>\n            <Input\n              readOnly\n              value={this.state.g}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>c1 = g^r mod p</label>\n            <Input\n              readOnly\n              value={this.state.c1}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>c2 = m·ya^r mod p</label>\n            <Input\n              readOnly\n              value={this.state.c2}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>ya, public key of A, ya = g^xa mod p</label>\n            <Input\n              readOnly\n              value={this.state.ya}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Tiempo límite para firmar el contrato </label>\n            <Input\n              readOnly\n              label=\"segundos\"\n              labelPosition=\"right\"\n              value={this.state.term}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Fecha de inicio (Timestamp)</label>\n            <Input\n              readOnly\n              value={this.state.start}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>z1 = g^s mod p</label>\n            <Input\n              readOnly\n              value={this.state.z1}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>z2 = xb·ya^s mod p</label>\n            <Input\n              readOnly\n              value={this.state.z2}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>yb, public key of B, yb = g^xb mod p</label>\n            <Input\n              readOnly\n              value={this.state.yb}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>c (challenge number)</label>\n            <Input\n              readOnly\n              value={this.state.c}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>w = r.add(c.mod(p).multiply(xb.mod(p)).mod(p))</label>\n            <Input\n              readOnly\n              value={this.state.w}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Contenido del contrato</label>\n            <Input\n              readOnly\n              value={this.state.message}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Deposito</label>\n            <Input\n              label=\"wei\"\n              labelPosition=\"right\"\n              value={this.state.deposit}\n            />\n          </Form.Field>\n\n          <Message error header=\"ERROR\" content={this.state.errorMessage} />\n          <Button primary loading={this.state.loading}>\n            Cerrar\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(DeliveryShow);\n","import Web3 from 'web3';\n\nlet web3\n\nif (window.web3) {\n  web3 = new Web3(window.web3.currentProvider);\n}\n\n/*\nhttps://medium.com/@parag.chirde/building-a-dapp-on-ethereum-with-vuejs-and-solidity-d01a24b54c1f\n\nhttps://medium.com/metamask/https-medium-com-metamask-breaking-change-injecting-web3-7722797916a8\n */\nwindow.addEventListener(\"load\", async () => {\n  // Modern dapp browsers...\n  if (window.ethereum) {\n    window.web3 = new Web3(window.ethereum);\n    try {\n      // Request account access if needed\n      await window.ethereum.enable();\n    } catch (error) {\n      alert('User denied account access...');\n    }\n  }\n  // Legacy dapp browsers...\n  else if (window.web3) {\n    window.web3 = new Web3(web3.currentProvider);\n  }\n  // Non-dapp browsers...\n  else {\n    alert(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n  }\n});\n\nexport default web3;","const p = '0xfabb9ab2f0b94831ce41fef46a3e1e0af4f0c30be6a20c6294cf0ed0243d9990b69794b02c7a04c1c34fa4ac36278a9d12805d1e136290d7c9661cc773eca0ef';\nconst g = '0x741b99e8d3e6197266cdb8573abbaf241f4d477abeca34889883534d2f6eeb59ffdd3dde12d31be92a9b873df01ed2bf86fc8b5d87ced1b9691cb7f1e9214c8d';\nconst q = '0x7d5dcd59785ca418e720ff7a351f0f057a786185f35106314a678768121eccc85b4bca58163d0260e1a7d2561b13c54e89402e8f09b1486be4b30e63b9f65077';\nconst xa = '0x171896f638c47b6cb040b7108094a63ee0d427f0918c1f14106589c66e4199e8e0680cd199b676297013a83cdac90f48e00e6dfd1db2e14d0752ab9f65c34099';\nconst ya = '0xf700332eaec7576cd02ef93d10c86428ced3f00bd67c69ed997dd4311f7b5dded395c8c4c14340b18099febeaf693fbe1926d79ed8613edb495032f0c4531e7c';\nconst r = '0x4677e52e4deb555e3b2356d8a980055283cf94498d02473b28aa56357bcf29cb4e15e419bd8fc337714464dee817e2608dc39981db3ad0f527f2559bdb541827';\nconst xb = '0xdafb1fb2f431fdee71309df79b8a15578fe5e6403f82120aa8ba89ed3a093e80ca707ba96ff8499b11002833961aaa7d47152dc4f8c6b4881c2ffffa8563f9';\nconst yb = '0x3235c538fd584e4d9089080ccdf7e75a7747bf9e5608965c83877672f9603804649224aff820b662ab6f42331a78138499203e12afeddfdf98f21c3afe099bde';\n\nexport default {\n  p  : p ,\n  g  : g ,\n  q  : q ,\n  xa : xa,\n  ya : ya,\n  r  : r ,\n  xb : xb,\n  yb : yb\n}\n\n","import web3 from './web3';\n\nconst Delivery = require('./build/ConfidentialMultipartyRegisteredEDeliveryWithoutTTP.json');\n\nexport default (address) => {\n    return new web3.eth.Contract(\n        JSON.parse(Delivery.interface),\n        address\n    );\n}","import React from 'react';\nimport { Menu } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nexport default () => {\n    return (\n        <Menu stackable style={{ marginTop: '10px' }}>\n            <Menu.Item as={Link} to='/'>\n                FIRMA DE CONTRATOS CONFIDENCIALES\n            </Menu.Item>\n            <Menu.Menu position=\"right\">\n                <Menu.Item as={Link} to='/'>\n                    CONTRATOS\n                </Menu.Item>\n                <Menu.Item as={Link} to='/deliveries/new'>\n                    +\n                </Menu.Item>\n            </Menu.Menu>\n        </Menu>\n    );\n};","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Table, Button, Icon, Message, Label } from 'semantic-ui-react';\nimport web3 from '../ethereum/web3';\nimport notification from '../ethereum/notification';\nimport variables from '../ethereum/variables';\n\nconst bigInt = require(\"big-integer\");\nconst dateFormat = require('dateformat');\n\nclass DeliveryRow extends Component {\n  state = {\n    receiver: '',\n    start: '',\n    state: '',\n    account: '',\n    sender: '',\n    loading: false,\n    errorMessage: '',\n    plazo: '',\n    ahora: ''\n  };\n\n  componentDidMount = async () => {\n    let deliveryContract = notification(this.props.delivery);\n    let receiver = await deliveryContract.methods.receiver().call();\n    let start = await deliveryContract.methods.start().call();\n    let state = await deliveryContract.methods.getState(this.props.delivery).call();\n    let plazo = await deliveryContract.methods.plazo().call();\n    const accounts = await web3.eth.getAccounts();\n    let sender = await deliveryContract.methods.sender().call();\n    let d = new Date(0);\n    let d2 =new Date(0);\n    d.setUTCSeconds(start);\n    plazo = d2.setUTCSeconds(plazo);\n    start = dateFormat(d, \"dd/mm/yyyy HH:MM\");\n    this.setState({ \n      receiver: receiver,\n      start: start,\n      state: state,\n      account: accounts[0],\n      sender: sender,\n      plazo: plazo\n    });\n  }\n\n  onView = async () => {\n    \n  };\n  \n  onChallenge = async (contractAddress) => {//solo puede acceder al onAccept el firmante B\n\n    let c, s, z1, z2;\n\n    this.setState({ loading: true, errorMessage: '' });\n\n    try {\n      let deliveryContract = notification(contractAddress);\n\n      const accounts = await web3.eth.getAccounts();\n      \n      //clave privada de b xb\n      let xb = bigInt(variables.xb.substr(2), 16);\n      //clave publica de b yb\n      let yb = bigInt(variables.yb.substr(2), 16);\n      \n      let p = bigInt((await deliveryContract.methods.p().call()).substr(2), 16);\n      let g = bigInt((await deliveryContract.methods.g().call()).substr(2), 16);\n      let ya = bigInt((await deliveryContract.methods.ya().call()).substr(2), 16);\n      let q = p.minus(1).divide(2);\n    \n      // VARIABLES FOR ACCEPT()\n      // Generation of challenge number c\n      c = bigInt.randBetween(2, q.minus(1));      // Pot ser mes curt, meitat de bits\n      \n      // Generation of random number s\n      s = bigInt.randBetween(2, q.minus(1));\n\n      // Generation of z1 = g^s mod p\n      z1 = g.modPow(s, p);\n      // Generation of z2 = xb·ya^s mod p\n      z2 = xb.multiply(ya.modPow(s, p));\n      \n      await deliveryContract.methods.challenge(\"0x\"+z1.toString(16), \"0x\"+z2.toString(16), \"0x\"+yb.toString(16), \"0x\"+c.toString(16)).send({ from: accounts[0] });\n\n      // Refresh\n      alert('Contract challenged!');\n      this.setState({ state: 'challenged' });\n    } catch (err) {\n      this.setState({ errorMessage: err.message });\n    } finally {\n        this.setState({ loading: false });\n    }\n  };\n\n  onResponse = async (contractAddress) => {//solo firmante A\n\n    let w;\n\n    this.setState({ loading: true, errorMessage: '' });\n\n    try {\n      let deliveryContract = notification(contractAddress);\n\n      const accounts = await web3.eth.getAccounts();\n      \n     \n      let r = bigInt(variables.r.substr(2), 16)\n      \n      let xa = bigInt(variables.xa.substr(2), 16)\n      \n      let p = bigInt((await deliveryContract.methods.p().call()).substr(2), 16);\n      let c = bigInt((await deliveryContract.methods.c().call()).substr(2), 16);\n      let z1 = bigInt((await deliveryContract.methods.z1().call()).substr(2),16);\n      let z2 = bigInt((await deliveryContract.methods.z2().call()).substr(2),16);\n      let z3 = z1.modPow(xa, p);\n      let z4 = z3.modInv(p);\n      let xb = z2.multiply(z4.mod(p));\n\n      // VARIABLES FOR FINISH()\n            \n      w =  r.add(c.multiply(xb.mod(p)));\n      \n      await deliveryContract.methods.response(\"0x\"+w.toString(16)).send({ from: accounts[0] });\n\n      // Refresh\n      alert('Contract responsed!');\n      this.setState({ state: 'responsed' });\n    } catch (err) {\n      this.setState({ errorMessage: err.message });\n    } finally {\n        this.setState({ loading: false });\n    }\n  };\n\n  onAccept = async (contractAddress) =>{\n    this.setState({ loading: true, errorMessage: '' });\n    try{\n      let deliveryContract = notification(contractAddress);\n\n      const accounts = await web3.eth.getAccounts();\n\n      await deliveryContract.methods.accept().send({ from: accounts[0] });\n\n      // Refresh\n      alert('Contract accepted!');\n      this.setState({ state: 'accepted' });\n    } catch (err) {\n      this.setState({ errorMessage: err.message });\n    } finally {\n        this.setState({ loading: false });\n    }\n  };\n\n  onFinish = async (contractAddress) =>{\n    this.setState({ loading: true, errorMessage: '' });\n    try{\n      let deliveryContract = notification(contractAddress);\n\n      const accounts = await web3.eth.getAccounts();\n\n      await deliveryContract.methods.finish().send({ from: accounts[0] });\n\n      // Refresh\n      alert('Contract finished!');\n      this.setState({ state: 'finished' });\n    } catch (err) {\n      this.setState({ errorMessage: err.message });\n    } finally {\n        this.setState({ loading: false });\n    }\n  };\n\n  onCancelA = async (contractAddress) =>{\n    this.setState({ loading: true, errorMessage: '' });\n    try{\n      let deliveryContract = notification(contractAddress);\n\n      const accounts = await web3.eth.getAccounts();\n\n      await deliveryContract.methods.cancelA().send({ from: accounts[0] });\n\n      // Refresh\n      alert('Contract cancelled!');\n      this.setState({ state: 'cancelled' });\n    } catch (err) {\n      this.setState({ errorMessage: err.message });\n    } finally {\n        this.setState({ loading: false });\n    }\n  };\n\n  onCancelB = async (contractAddress) =>{\n    this.setState({ loading: true, errorMessage: '' });\n    try{\n      let deliveryContract = notification(contractAddress);\n\n      const accounts = await web3.eth.getAccounts();\n\n      await deliveryContract.methods.cancelB().send({ from: accounts[0] });\n\n      // Refresh\n      alert('Contract cancelled!');\n      this.setState({ state: 'cancelled' });\n    } catch (err) {\n      this.setState({ errorMessage: err.message });\n    } finally {\n        this.setState({ loading: false });\n    }\n  };\n\n  render() {\n      return (\n          <Table.Row>\n              <Table.Cell>{this.props.id+1}</Table.Cell>\n              <Table.Cell>{this.props.delivery}</Table.Cell>\n              { this.props.sent ?(\n                <Table.Cell>{this.state.receiver}</Table.Cell>\n                ):(\n                  <Table.Cell>{this.state.sender}</Table.Cell>\n                )    \n              }\n              <Table.Cell>{this.state.start}</Table.Cell>\n              <Table.Cell>\n                {\n                 this.state.state==='finished'? \n                   (\n                    <Label as='a' color='teal' horizontal>Finished</Label>\n                   ) : (\n                    this.state.state==='accepted'?\n                    (\n                      <Label as='a' color='yellow' horizontal>Accepted</Label>\n                    ) : (\n                      this.state.state==='responsed'? \n                      (\n                        <Label as='a' horizontal>Responsed</Label>\n                      ) : (\n                        this.state.state==='challenged'?\n                        (\n                          <Label as='a' color='red' horizontal>Challenged</Label>\n                        ) : (\n                          this.state.state==='created'?\n                          (\n                            <Label as='a' color='green' horizontal>Created</Label>\n                          ) : (\n                            this.state.state==='cancelled'?\n                            (\n                              <Label as='a' color='red' horizontal>Cancelled</Label>\n                            ) : (\n                              <Label as='a' horizontal>-</Label>\n                              )\n                          )\n                        )\n                      )\n                    )\n                   )\n                 }\n              </Table.Cell>\n              <Table.Cell>\n                  {\n                     \n                     this.state.state==='accepted'?\n                     (\n                      <Button animated='vertical' color='green' onClick={() => this.onFinish(this.props.delivery)} disabled={(this.state.account!==this.state.sender)||(Date.now()>this.state.plazo)} loading={this.state.loading}>\n                        <Button.Content hidden>Finish</Button.Content>\n                        <Button.Content visible>\n                          <Icon name=' handshake' />\n                        </Button.Content>\n                      </Button>\n                     ) : (\n                       this.state.state==='responsed'? \n                       (\n                        <Button animated='vertical' color='green' onClick={() => this.onAccept(this.props.delivery)} disabled={(this.state.account!==this.state.receiver)||(Date.now()>this.state.plazo)} loading={this.state.loading}>\n                        <Button.Content hidden>Accept</Button.Content>\n                        <Button.Content visible>\n                          <Icon name='check' />\n                        </Button.Content>\n                      </Button>\n                       ) : (\n                         this.state.state==='challenged'?\n                         (\n                          <Button animated='vertical' color='green' onClick={() => this.onResponse(this.props.delivery)} disabled={(this.state.account!==this.state.sender)||(Date.now()>this.state.plazo)} loading={this.state.loading}>\n                          <Button.Content hidden>Response</Button.Content>\n                          <Button.Content visible>\n                            <Icon name='stopwatch' />\n                          </Button.Content>\n                        </Button>\n                         ) : (\n                           this.state.state==='created'?\n                           (                            \n                            <Button animated='vertical' color='green' onClick={() => this.onChallenge(this.props.delivery)} disabled={(this.state.account!==this.state.receiver)||(Date.now()>this.state.plazo)} loading={this.state.loading}>\n                            <Button.Content hidden>Challenge</Button.Content>\n                            <Button.Content visible>\n                              <Icon name='file alternate outline' />\n                            </Button.Content>\n                          </Button>\n                           ): (\n                            this.state.state==='cancelled'?\n                            (\n                             <Button  color='red' onClick={() => this.onView} disabled loading={this.state.loading}>\n                               Cancelado  \n                             </Button>\n                            ) : (\n                            <Button  color='green' onClick={() => this.onView} disabled loading={this.state.loading}>\n                            Firmado\n                            </Button>\n                             )\n                          )\n                       )\n                     )\n                    )          \n                  }\n\n                  <Link to={\"/deliveries/\"+this.props.delivery}>\n                    <Button animated='vertical' color='green' onClick={this.onView}>\n                      <Button.Content hidden>View</Button.Content>\n                      <Button.Content visible>\n                        <Icon name='eye' />\n                      </Button.Content>\n                    </Button>\n                  </Link>\n\n                  {\n                     \n                     this.state.state==='accepted'?\n                     (\n                      <Button animated='vertical' color='red' onClick={() => this.onCancelB(this.props.delivery)} disabled={(this.state.account!==this.state.receiver)||(Date.now()<this.state.plazo)} loading={this.state.loading}>\n                        <Button.Content hidden>Cancel</Button.Content>\n                        <Button.Content visible>\n                          <Icon name=' file excel outline' />\n                        </Button.Content>\n                      </Button>\n                     ) : (\n                       this.state.state==='responsed'? \n                       (\n                        <Button animated='vertical' color='red' onClick={() => this.onCancelA(this.props.delivery)} disabled={(this.state.account!==this.state.sender)||(Date.now()<this.state.plazo)} loading={this.state.loading}>\n                        <Button.Content hidden>Cancel</Button.Content>\n                        <Button.Content visible>\n                          <Icon name='file excel outlinek' />\n                        </Button.Content>\n                      </Button>\n                       ) : (\n                         this.state.state==='challenged'?\n                         (\n                          <Button animated='vertical' color='red' onClick={() => this.onCancelB(this.props.delivery)} disabled={(this.state.account!==this.state.receiver)||(Date.now()<this.state.plazo)} loading={this.state.loading}>\n                          <Button.Content hidden>Cancel</Button.Content>\n                          <Button.Content visible>\n                            <Icon name='file excel outline' />\n                          </Button.Content>\n                        </Button>\n                         ) : (\n                           this.state.state==='created'?\n                           (                           \n                            <Button animated='vertical' color='red' onClick={() => this.onCancelA(this.props.delivery)} disabled={(this.state.account!==this.state.sender)||(Date.now()<this.state.plazo)} loading={this.state.loading}>\n                            <Button.Content hidden>Cancel</Button.Content>\n                            <Button.Content visible>\n                              <Icon name='file excel outline' />\n                            </Button.Content>\n                          </Button>\n                           ) : (\n                             this.state.state==='cancelled'?\n                             (\n                              <Button  color='red' onClick={() => this.onView} disabled loading={this.state.loading}>\n                                Cancelado  \n                              </Button>\n                             ) : (\n                            <Button  color='green' onClick={() => this.onView} disabled loading={this.state.loading}>\n                              Firmado\n                            </Button>\n                           )\n                         )\n                       )\n                       )\n                    )          \n                  }\n                  <Message error header=\"ERROR\" content={this.state.errorMessage} hidden={!this.state.errorMessage} />\n              </Table.Cell>\n          </Table.Row>\n          \n      );\n    }\n}\n\nexport default DeliveryRow;\n","import React, { Component } from 'react';\nimport { Icon, Button, Dimmer, Loader, Segment, Table } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport factory from '../ethereum/factory';\nimport web3 from '../ethereum/web3';\nimport DeliveryRow from '../components/DeliveryRow';\n\nclass Home extends Component {\n    state = {\n        loadingPage: true,\n        loading: false,\n        errorMessage: ''\n    };\n\n    componentDidMount = async () => {\n        try {\n            const accounts = await web3.eth.getAccounts();\n            const senderDeliveriesCount = await factory.methods.getSenderDeliveriesCount(accounts[0]).call();\n            const receiverDeliveriesCount = await factory.methods.getReceiverDeliveriesCount(accounts[0]).call();\n\n            const senderDeliveries = await Promise.all(\n                Array(parseInt(senderDeliveriesCount))\n                  .fill()\n                  .map((delivery, index) => {\n                    return factory.methods.senderDeliveries(accounts[0], index).call();\n                  })\n              );\n\n              const receiverDeliveries = await Promise.all(\n                Array(parseInt(receiverDeliveriesCount))\n                  .fill()\n                  .map((delivery, index) => {\n                    return factory.methods.receiverDeliveries(accounts[0], index).call();\n                  })\n              );\n\n            this.setState({ \n                senderDeliveries: senderDeliveries, \n                receiverDeliveries: receiverDeliveries \n            });\n        } finally {\n            this.setState({ loadingPage: false })\n        }\n    }\n\n    renderDeliveryRows(sent) {\n        var deliveries;\n        if (sent) {\n            deliveries = this.state.senderDeliveries;\n        } else {\n            deliveries = this.state.receiverDeliveries;\n        }\n        return deliveries.map((delivery, index) => {\n            return (\n                <DeliveryRow\n                    key={index}\n                    id={index}\n                    delivery={delivery}\n                    sent={sent}\n                />\n            );\n        });\n    }\n\n    render() {\n        // Loading\n        if (this.state.loadingPage) return (\n            <div>\n                <Segment style={{ height: '80vh' }}>\n                    <Dimmer active inverted>\n                        <Loader inverted content='Loading...' />\n                    </Dimmer>\n                </Segment>\n            </div>\n        );\n      \n        // Done\n        return (\n            <div>\n                <h3><Icon name='sign in alternate' circular />&nbsp;Propuestas de contrato recibidas</h3>\n                <Table fixed>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>#</Table.HeaderCell>\n                            <Table.HeaderCell>Dirección del SmartContract</Table.HeaderCell>\n                            <Table.HeaderCell>Proponente</Table.HeaderCell>\n                            <Table.HeaderCell>Fecha de inicio</Table.HeaderCell>\n                            <Table.HeaderCell>Estado</Table.HeaderCell>\n                            <Table.HeaderCell>Acción</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>{this.renderDeliveryRows(false)}</Table.Body>\n                </Table>\n                <h3><Icon name='sign out alternate' circular />&nbsp;Contratos propuestos</h3>\n                <Table fixed>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>#</Table.HeaderCell>\n                            <Table.HeaderCell>Dirección del SmartContract</Table.HeaderCell>\n                            <Table.HeaderCell>Receptor</Table.HeaderCell>\n                            <Table.HeaderCell>Fecha de inicio</Table.HeaderCell>\n                            <Table.HeaderCell>Estado</Table.HeaderCell>\n                            <Table.HeaderCell>Acción</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>{this.renderDeliveryRows(true)}</Table.Body>\n                </Table>\n                <Link to=\"/deliveries/new\">\n                    <Button\n                        color=\"green\"\n                        content = \"Proponer nuevo contrato\"\n                        icon = \"add circle\"\n                        \n                        />\n                </Link>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport { Switch, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport Home from './pages/Home';\nimport DeliveryNew from './pages/DeliveryNew';\nimport DeliveryShow from './pages/DeliveryShow';\n\nimport 'semantic-ui-css/semantic.min.css';\n\nclass App extends Component {\n    render() {\n        return (\n            <Container>\n                <Header />\n                <main>\n                    <Switch>\n                        <Route exact path='/' component={Home}/>\n                        <Route exact path='/deliveries/new' component={DeliveryNew}/>\n                        <Route exact path='/deliveries/:address' component={DeliveryShow}/>\n                       \n                    </Switch>\n                </main>\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n  \nReactDOM.render((\n    <HashRouter>\n      <App />\n    </HashRouter>\n    ), document.getElementById('root'));\nregisterServiceWorker();\n","import web3 from './web3';\n\n//const path = require(\"path\");\n//const fs = require(\"fs-extra\"); // fs with extra functions\n\nconst DeliveryFactory = require('./build/ConfidentialMultipartyRegisteredEDeliveryWithoutTTPFactory.json');\n\nconst instance = new web3.eth.Contract(\n    JSON.parse(DeliveryFactory.interface),\n    DeliveryFactory.address\n);\n\nexport default instance;"],"sourceRoot":""}